pipeline:
  test:
    image: python:3.6
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=url
      - POSTGRES_PASSWORD=secret
    commands:
      - pip install pipenv
      - cd app
      - pipenv install --system
      - python app.py &
      - sleep 5
      - "curl -s localhost:8000/health | grep 'true'"
    when:
      branch: [ master ]
      event: [ pull_request ]

  release-app-latest:
    group: release-latest
    image: plugins/docker:17.10
    repo: cuongnv23/url-shortener-app
    dockerfile: app/Dockerfile
    context: app
    secrets: [ docker_username, docker_password ]
    tag: latest
    when:
      branch: [ master ]
      event:
        exclude: [ pull_request ]

  release-db-latest:
    group: release-latest
    image: plugins/docker:17.10
    repo: cuongnv23/url-shortener-db
    dockerfile: sql/Dockerfile
    context: sql
    secrets: [ docker_username, docker_password ]
    tag: latest
    when:
      branch: [ master ]
      event:
        exclude: [ pull_request ]

  release-nginx-latest:
    group: release-latest
    image: plugins/docker:17.10
    repo: cuongnv23/url-shortener-nginx
    dockerfile: nginx.Dockerfile
    secrets: [ docker_username, docker_password ]
    tag: latest
    when:
      branch: [ master ]
      event:
        exclude: [ pull_request ]

  release-app-tag:
    group: release-tag
    image: plugins/docker:17.10
    repo: cuongnv23/url-shortener-app
    dockerfile: app/Dockerfile
    context: app
    secrets: [ docker_username, docker_password ]
    auto_tag: true
    when:
      event: [ tag ]

  release-db-tag:
    group: release-tag
    image: plugins/docker:17.10
    repo: cuongnv23/url-shortener-db
    dockerfile: sql/Dockerfile
    context: sql
    secrets: [ docker_username, docker_password ]
    auto_tag: true
    when:
      event: [ tag ]

  release-nginx-tag:
    group: release-tag
    image: plugins/docker:17.10
    repo: cuongnv23/url-shortener-nginx
    dockerfile: nginx.Dockerfile
    secrets: [ docker_username, docker_password ]
    auto_tag: true
    when:
      event: [ tag ]

  deploy-test:
    image: cuongnv23/kubectl:latest
    secrets: [ gke_cluster, gcp_project, gcp_zone, gcp_service_account ]
    script:
      - echo $${GCP_SERVICE_ACCOUNT}} | base64 --decode > /tmp/sva.json
      - gcloud auth activate-service-account --key-file /tmp/sva.json
      - gcloud container clusters get-credentials $${GKE_CLUSTER} --zone $${GCP_ZONE} --project $${GCP_PROJECT}
      - helm init --upgrade --service-account=tiller --wait
      - helm upgrade --install yaus-app app/helm_charts/yaus-app/ --debug
    when:
      branch: [ master ]
      event: [ push ]

  deploy-staging:
    image: cuongnv23/kubectl:latest
    secrets: [ gke_cluster, gcp_project, gcp_zone, gcp_service_account ]
    environment:
        GCP_SVA:
            from_secret: gke_service_account
        GKE_CLUSTER:
            from_secret: gke_cluster
        GCP_PROJECT:
            from_secret: gcp_project
        GCP_ZONE:
            from_secret: gcp_zone

    script:
      - echo $GCP_SVA | base64 --decode > /tmp/sva.json
      - gcloud auth activate-service-account --key-file /tmp/sva.json
      - gcloud container clusters get-credentials $GKE_CLUSTER --zone $GCP_ZONE --project $GCP_PROJECT
      - helm upgrade --install yaus-app app/helm_charts/yaus-app/ --set deployment.version=${DRONE_TAG}  --debug
    when:
      event: [ tag ]


  telegram:
    image: appleboy/drone-telegram
    message: >
      {{#success build.status}}
        build {{build.number}}({{build.link}}) succeeded.
      {{else}}
        build {{build.number}}({{build.link}}) failed. Fix me please.
      {{/success}}
    secrets: [ telegram_token, telegram_to ]
    when:
      status: [ failure, success ]

services:
  postgres:
    image: cuongnv23/url-shortener-db
